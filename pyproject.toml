[project]
name = "three_variable"
version = "0.0.1"
authors = [{ "name" = "Matthew Ord", "email" = "matthew.ord1@gmail.com" }]
description = "A Framework for Automatic Basis Transformations"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
requires-python = ">=3.13,<3.14"
dependencies = [
    "matplotlib>=3.10.0",
    "numpy>=2.2.2",
    "scipy>=1.15.1",
    "sympy @ git+https://github.com/Matt-Ord/sympy.git@b9477edd09c48a029cb7cad4e16c346eaa1e7785",
    "slate_core[plot] @ git+https://github.com/Matt-Ord/slate.git@b4744c9f981619ae7a21b526a43159d5c6527539",
    "slate_quantum[sse_solver_py,plot,qutip] @ git+https://github.com/Matt-Ord/slate_quantum.git@1011c95f42e32e5edd48f801986be6e98df739df",
    "adsorbate_simulation[plot] @ git+https://github.com/Matt-Ord/adsorbate_simulation@6114583dd5212c9defc3770ac7c7fc1cafcd6536",
]

[tool.uv]
override-dependencies = [
    "sse_solver@ git+https://github.com/Matt-Ord/sse_solver@52228b0#subdirectory=sse_solver_py",
]

[tool.ruff]
unsafe-fixes = true
exclude = [".git", ".git-rewrite", ".vscode"]

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = ["T201"]
select = ["ALL"]
preview = true
ignore = [
    "COM812",
    "E501",
    "S101",
    "PT009",
    "D100",
    "D105",
    "CPY001",
    "TD003",
    "TD002",
    "DOC201",
    "DOC402",
    "PD",
    "D104",
    "D103",
    "D102",
    "D101",
]


[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*" = [
    "PLR6301",
    "PLC2701",
    "PLR0914",
    "D101",
    "D102",
    "D103",
    "D104",
    "INP001",
]
"examples/**/*" = ["INP001"]
"scripts/**/*" = ["INP001", "T201"]
"docs/**/*" = ["INP001", "I002"]

[tool.ruff.lint.pylint]
allow-dunder-method-names = [
    "__as_fundamental__",
    "__from_fundamental__",
    "__into_fundamental__",
    "__as_transformed__",
    "__into_transformed__",
    "__from_transformed__",
    "__convert_vector_into__",
    "__into_inner__",
    "__from_inner__",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pyright]
typeCheckingMode = "strict"
include = ["tests", "three_variable", "scripts"]
reportImplicitOverride = true

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = ["ruff", "pytest>=8.3.4", "pyright ==1.1.400"]
